"""
–ö–µ–π—Å: –†–∞–∑—Ä–∞–±—Ç–∫–∞ –º–æ–¥–µ–ª–∏ –°–ü–ê –∫–æ–º–ø–ª–µ–∫—Å–∞ –ø—Ä–∏ –æ—Ç–µ–ª–µ 5*
–ó–∞–¥–∞—á–∞: —Ä–∞–∑—Ä—Ä–∞–±–æ—Ç–∞—Ç—å –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –°–ü–ê –∫–æ–º–ø–ª–µ–∫—Å
Token: 1808675918:AAF9JmF0_o8HucMT9E5VDN3JNy2k0RG7bwY
–°—Å—ã–ª–∫–∞: t.me/SpaOkuraBot
"""
#--------–ß—Ç–æ –Ω–∞–º –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ?--------
"""
Google —Ç–∞–±–ª–∏—Ü–∞
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ requests 
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ pyTelegramBotAPI 

"""
import requests
import pprint
import telebot
import spa_data
from telebot.types import Message
# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ API –±–æ—Ç–∞

bot = telebot.TeleBot(spa_data.TOKEN)

# –í—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_screen(user):
    bot.send_photo(user.id, open('img/admin_hi.png', 'rb'))
    bot.send_message(user.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, " + str(user.name)+"! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π. –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä SPA –∫–æ–º–ø–ª–µ–∫—Å–∞ Okura. \n–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–π—Å –ª–∏—Å—Ç–æ–º üìñ –∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –ø—Ä–æ—Ü–µ–¥—É—Ä—ã ", reply_markup = spa_data.main_markup)
    bot.send_message(user.id, '–í —Ä–∞–∑–¥–µ–ª–µ ‚Äú–ó–∞–ø–∏—Å–∞—Ç—å—Å—è‚Äù –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç.')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def welcome(message):  
    user = spa_data.users_dict.get(message.from_user.id, spa_data.MyUser(message.from_user.id, message.chat.first_name))
    user.action(message.chat.id, "main_menu")
    print(user.state)
    if user.state == "main_menu":
        main_screen(user)
    


@bot.message_handler(content_types=['text'])
def dialog(message):
    user = spa_data.users_dict.get(message.from_user.id, spa_data.MyUser(message.from_user.id, message.from_user.username))
    if message.text == 'üëà –ù–∞–∑–∞–¥':
        user.action(message.chat.id, 'main_menu')
        print(user.state)

    elif message.text == '‚òéÔ∏è –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ':
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç', reply_markup = spa_data.feedback_markup)
        user.action(message.chat.id, 'feedback')
        print(user.state)

    if user.state == "main_menu":
        main_screen(user)
    
    else: # –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
        l = []
        try:
            l = list(spa_data.services[message.text].items())
            price = []
            for k in l:
                price.append(k[0]+ ' - ' + k[1] + '\n')
            bot.send_photo(user.id, open('img/admin_2.png', 'rb'))
            bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º —É—Å–ª—É–≥–∏, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏! \n \n'+''.join(price))
            user.action(user, message.chat.id, "price_list")
        except Exception:
            if message.text == '‚úçÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è':
                user.action(message.chat.id, 'sign')
                print(user.state)
    if user.state == 'sign':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è', reply_markup=spa_data.sign_markup)
       
    


bot.polling()
